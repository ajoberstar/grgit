buildscript {
    configurations.all{
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if(details.requested.group == "org.eclipse.jgit" && details.requested.name == "org.eclipse.jgit"
                    && details.requested.version == "latest.release") {
                details.useVersion "5.13.0.202109080827-r"
                details.because "version latest.release includes 6.+ which is built with java 11 is not compatible with java 8"
            }
        }
    }
}

plugins {
  id 'org.ajoberstar.grgit'
  id 'org.ajoberstar.git-publish'
  id 'org.ajoberstar.reckon'
  id 'org.jbake.site'
}

apply from: 'gradle/spotless.gradle'
apply from: 'gradle/locking.gradle'
apply from: 'gradle/bintray.gradle'

reckon {
  scopeFromProp()
  stageFromProp('alpha', 'beta', 'rc', 'final')
}

allprojects {
  group = 'org.ajoberstar.grgit'
  description = 'The Groovy way to use Git.'

  plugins.withId('java-library') {
    sourceCompatibility = 8

    repositories {
      mavenCentral()
    }

    java {
      withSourcesJar()
      withJavadocJar()
    }

    plugins.withId('maven-publish') {
      publishing {
        publications {
          main(MavenPublication) {
            from components.java
          }
        }
      }
    }
  }

  // workaround for groovy plugin not supporting java-library
  plugins.withId('groovy') {
    configurations {
      apiElements {
          outgoing.variants.getByName('classes').artifact(
              file: compileGroovy.destinationDir,
              type: ArtifactTypeDefinition.JVM_CLASS_DIRECTORY,
              builtBy: compileGroovy)
      }
    }
  }
}

jbake {
  srcDirName = 'docs'
}

gitPublish {
  branch = 'gh-pages'
  contents {
    from "${buildDir}/${jbake.destDirName}"
  }
}

gitPublishCopy.dependsOn bake
